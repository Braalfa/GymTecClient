/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.10.9.0 (NJsonSchema v10.4.1.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming



export class Administrador implements IAdministrador {
    contrasena?: string | undefined;
    correo?: string | undefined;

    constructor(data?: IAdministrador) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.contrasena = _data["Contrasena"];
            this.correo = _data["Correo"];
        }
    }

    static fromJS(data: any): Administrador {
        data = typeof data === 'object' ? data : {};
        let result = new Administrador();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Contrasena"] = this.contrasena;
        data["Correo"] = this.correo;
        return data;
    }
}

export interface IAdministrador {
    contrasena?: string | undefined;
    correo?: string | undefined;
}

export class Aposento implements IAposento {
    nombre?: string | undefined;
    correoelectronicousuario?: string | undefined;
    correoelectronicousuarioNavigation?: Usuario | undefined;
    dispositivos?: Dispositivo[] | undefined;

    constructor(data?: IAposento) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.nombre = _data["Nombre"];
            this.correoelectronicousuario = _data["Correoelectronicousuario"];
            this.correoelectronicousuarioNavigation = _data["CorreoelectronicousuarioNavigation"] ? Usuario.fromJS(_data["CorreoelectronicousuarioNavigation"]) : <any>undefined;
            if (Array.isArray(_data["Dispositivos"])) {
                this.dispositivos = [] as any;
                for (let item of _data["Dispositivos"])
                    this.dispositivos!.push(Dispositivo.fromJS(item));
            }
        }
    }

    static fromJS(data: any): Aposento {
        data = typeof data === 'object' ? data : {};
        let result = new Aposento();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Nombre"] = this.nombre;
        data["Correoelectronicousuario"] = this.correoelectronicousuario;
        data["CorreoelectronicousuarioNavigation"] = this.correoelectronicousuarioNavigation ? this.correoelectronicousuarioNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.dispositivos)) {
            data["Dispositivos"] = [];
            for (let item of this.dispositivos)
                data["Dispositivos"].push(item.toJSON());
        }
        return data;
    }
}

export interface IAposento {
    nombre?: string | undefined;
    correoelectronicousuario?: string | undefined;
    correoelectronicousuarioNavigation?: Usuario | undefined;
    dispositivos?: Dispositivo[] | undefined;
}

export class Usuario implements IUsuario {
    correoelectronico?: string | undefined;
    contrasena?: string | undefined;
    primernombre?: string | undefined;
    segundonombre?: string | undefined;
    primerapellido?: string | undefined;
    segundoapellido?: string | undefined;
    usuarioUbicacion?: UsuarioUbicacion | undefined;
    aposentos?: Aposento[] | undefined;
    certificadoGarantia?: CertificadoGarantium[] | undefined;
    dispositivos?: Dispositivo[] | undefined;
    duenoPasados?: DuenoPasado[] | undefined;
    pedidos?: Pedido[] | undefined;
    usuarioDireccions?: UsuarioDireccion[] | undefined;

    constructor(data?: IUsuario) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.correoelectronico = _data["Correoelectronico"];
            this.contrasena = _data["Contrasena"];
            this.primernombre = _data["Primernombre"];
            this.segundonombre = _data["Segundonombre"];
            this.primerapellido = _data["Primerapellido"];
            this.segundoapellido = _data["Segundoapellido"];
            this.usuarioUbicacion = _data["UsuarioUbicacion"] ? UsuarioUbicacion.fromJS(_data["UsuarioUbicacion"]) : <any>undefined;
            if (Array.isArray(_data["Aposentos"])) {
                this.aposentos = [] as any;
                for (let item of _data["Aposentos"])
                    this.aposentos!.push(Aposento.fromJS(item));
            }
            if (Array.isArray(_data["CertificadoGarantia"])) {
                this.certificadoGarantia = [] as any;
                for (let item of _data["CertificadoGarantia"])
                    this.certificadoGarantia!.push(CertificadoGarantium.fromJS(item));
            }
            if (Array.isArray(_data["Dispositivos"])) {
                this.dispositivos = [] as any;
                for (let item of _data["Dispositivos"])
                    this.dispositivos!.push(Dispositivo.fromJS(item));
            }
            if (Array.isArray(_data["DuenoPasados"])) {
                this.duenoPasados = [] as any;
                for (let item of _data["DuenoPasados"])
                    this.duenoPasados!.push(DuenoPasado.fromJS(item));
            }
            if (Array.isArray(_data["Pedidos"])) {
                this.pedidos = [] as any;
                for (let item of _data["Pedidos"])
                    this.pedidos!.push(Pedido.fromJS(item));
            }
            if (Array.isArray(_data["UsuarioDireccions"])) {
                this.usuarioDireccions = [] as any;
                for (let item of _data["UsuarioDireccions"])
                    this.usuarioDireccions!.push(UsuarioDireccion.fromJS(item));
            }
        }
    }

    static fromJS(data: any): Usuario {
        data = typeof data === 'object' ? data : {};
        let result = new Usuario();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Correoelectronico"] = this.correoelectronico;
        data["Contrasena"] = this.contrasena;
        data["Primernombre"] = this.primernombre;
        data["Segundonombre"] = this.segundonombre;
        data["Primerapellido"] = this.primerapellido;
        data["Segundoapellido"] = this.segundoapellido;
        data["UsuarioUbicacion"] = this.usuarioUbicacion ? this.usuarioUbicacion.toJSON() : <any>undefined;
        if (Array.isArray(this.aposentos)) {
            data["Aposentos"] = [];
            for (let item of this.aposentos)
                data["Aposentos"].push(item.toJSON());
        }
        if (Array.isArray(this.certificadoGarantia)) {
            data["CertificadoGarantia"] = [];
            for (let item of this.certificadoGarantia)
                data["CertificadoGarantia"].push(item.toJSON());
        }
        if (Array.isArray(this.dispositivos)) {
            data["Dispositivos"] = [];
            for (let item of this.dispositivos)
                data["Dispositivos"].push(item.toJSON());
        }
        if (Array.isArray(this.duenoPasados)) {
            data["DuenoPasados"] = [];
            for (let item of this.duenoPasados)
                data["DuenoPasados"].push(item.toJSON());
        }
        if (Array.isArray(this.pedidos)) {
            data["Pedidos"] = [];
            for (let item of this.pedidos)
                data["Pedidos"].push(item.toJSON());
        }
        if (Array.isArray(this.usuarioDireccions)) {
            data["UsuarioDireccions"] = [];
            for (let item of this.usuarioDireccions)
                data["UsuarioDireccions"].push(item.toJSON());
        }
        return data;
    }
}

export interface IUsuario {
    correoelectronico?: string | undefined;
    contrasena?: string | undefined;
    primernombre?: string | undefined;
    segundonombre?: string | undefined;
    primerapellido?: string | undefined;
    segundoapellido?: string | undefined;
    usuarioUbicacion?: UsuarioUbicacion | undefined;
    aposentos?: Aposento[] | undefined;
    certificadoGarantia?: CertificadoGarantium[] | undefined;
    dispositivos?: Dispositivo[] | undefined;
    duenoPasados?: DuenoPasado[] | undefined;
    pedidos?: Pedido[] | undefined;
    usuarioDireccions?: UsuarioDireccion[] | undefined;
}

export class UsuarioUbicacion implements IUsuarioUbicacion {
    paisregion?: string | undefined;
    correoelectronicousuario?: string | undefined;
    correoelectronicousuarioNavigation?: Usuario | undefined;
    paisregionNavigation?: Region | undefined;

    constructor(data?: IUsuarioUbicacion) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.paisregion = _data["Paisregion"];
            this.correoelectronicousuario = _data["Correoelectronicousuario"];
            this.correoelectronicousuarioNavigation = _data["CorreoelectronicousuarioNavigation"] ? Usuario.fromJS(_data["CorreoelectronicousuarioNavigation"]) : <any>undefined;
            this.paisregionNavigation = _data["PaisregionNavigation"] ? Region.fromJS(_data["PaisregionNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): UsuarioUbicacion {
        data = typeof data === 'object' ? data : {};
        let result = new UsuarioUbicacion();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Paisregion"] = this.paisregion;
        data["Correoelectronicousuario"] = this.correoelectronicousuario;
        data["CorreoelectronicousuarioNavigation"] = this.correoelectronicousuarioNavigation ? this.correoelectronicousuarioNavigation.toJSON() : <any>undefined;
        data["PaisregionNavigation"] = this.paisregionNavigation ? this.paisregionNavigation.toJSON() : <any>undefined;
        return data;
    }
}

export interface IUsuarioUbicacion {
    paisregion?: string | undefined;
    correoelectronicousuario?: string | undefined;
    correoelectronicousuarioNavigation?: Usuario | undefined;
    paisregionNavigation?: Region | undefined;
}

export class Region implements IRegion {
    pais?: string | undefined;
    continente?: string | undefined;
    distribuidorUbicacions?: DistribuidorUbicacion[] | undefined;
    usuarioUbicacions?: UsuarioUbicacion[] | undefined;

    constructor(data?: IRegion) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pais = _data["Pais"];
            this.continente = _data["Continente"];
            if (Array.isArray(_data["DistribuidorUbicacions"])) {
                this.distribuidorUbicacions = [] as any;
                for (let item of _data["DistribuidorUbicacions"])
                    this.distribuidorUbicacions!.push(DistribuidorUbicacion.fromJS(item));
            }
            if (Array.isArray(_data["UsuarioUbicacions"])) {
                this.usuarioUbicacions = [] as any;
                for (let item of _data["UsuarioUbicacions"])
                    this.usuarioUbicacions!.push(UsuarioUbicacion.fromJS(item));
            }
        }
    }

    static fromJS(data: any): Region {
        data = typeof data === 'object' ? data : {};
        let result = new Region();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Pais"] = this.pais;
        data["Continente"] = this.continente;
        if (Array.isArray(this.distribuidorUbicacions)) {
            data["DistribuidorUbicacions"] = [];
            for (let item of this.distribuidorUbicacions)
                data["DistribuidorUbicacions"].push(item.toJSON());
        }
        if (Array.isArray(this.usuarioUbicacions)) {
            data["UsuarioUbicacions"] = [];
            for (let item of this.usuarioUbicacions)
                data["UsuarioUbicacions"].push(item.toJSON());
        }
        return data;
    }
}

export interface IRegion {
    pais?: string | undefined;
    continente?: string | undefined;
    distribuidorUbicacions?: DistribuidorUbicacion[] | undefined;
    usuarioUbicacions?: UsuarioUbicacion[] | undefined;
}

export class DistribuidorUbicacion implements IDistribuidorUbicacion {
    cedulajuridicadistribuidor?: string | undefined;
    paisregion?: string | undefined;
    cedulajuridicadistribuidorNavigation?: Distribuidor | undefined;
    paisregionNavigation?: Region | undefined;

    constructor(data?: IDistribuidorUbicacion) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.cedulajuridicadistribuidor = _data["Cedulajuridicadistribuidor"];
            this.paisregion = _data["Paisregion"];
            this.cedulajuridicadistribuidorNavigation = _data["CedulajuridicadistribuidorNavigation"] ? Distribuidor.fromJS(_data["CedulajuridicadistribuidorNavigation"]) : <any>undefined;
            this.paisregionNavigation = _data["PaisregionNavigation"] ? Region.fromJS(_data["PaisregionNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): DistribuidorUbicacion {
        data = typeof data === 'object' ? data : {};
        let result = new DistribuidorUbicacion();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Cedulajuridicadistribuidor"] = this.cedulajuridicadistribuidor;
        data["Paisregion"] = this.paisregion;
        data["CedulajuridicadistribuidorNavigation"] = this.cedulajuridicadistribuidorNavigation ? this.cedulajuridicadistribuidorNavigation.toJSON() : <any>undefined;
        data["PaisregionNavigation"] = this.paisregionNavigation ? this.paisregionNavigation.toJSON() : <any>undefined;
        return data;
    }
}

export interface IDistribuidorUbicacion {
    cedulajuridicadistribuidor?: string | undefined;
    paisregion?: string | undefined;
    cedulajuridicadistribuidorNavigation?: Distribuidor | undefined;
    paisregionNavigation?: Region | undefined;
}

export class Distribuidor implements IDistribuidor {
    cedulajuridica?: string | undefined;
    nombre?: string | undefined;
    distribuidorUbicacion?: DistribuidorUbicacion | undefined;
    dispositivos?: Dispositivo[] | undefined;

    constructor(data?: IDistribuidor) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.cedulajuridica = _data["Cedulajuridica"];
            this.nombre = _data["Nombre"];
            this.distribuidorUbicacion = _data["DistribuidorUbicacion"] ? DistribuidorUbicacion.fromJS(_data["DistribuidorUbicacion"]) : <any>undefined;
            if (Array.isArray(_data["Dispositivos"])) {
                this.dispositivos = [] as any;
                for (let item of _data["Dispositivos"])
                    this.dispositivos!.push(Dispositivo.fromJS(item));
            }
        }
    }

    static fromJS(data: any): Distribuidor {
        data = typeof data === 'object' ? data : {};
        let result = new Distribuidor();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Cedulajuridica"] = this.cedulajuridica;
        data["Nombre"] = this.nombre;
        data["DistribuidorUbicacion"] = this.distribuidorUbicacion ? this.distribuidorUbicacion.toJSON() : <any>undefined;
        if (Array.isArray(this.dispositivos)) {
            data["Dispositivos"] = [];
            for (let item of this.dispositivos)
                data["Dispositivos"].push(item.toJSON());
        }
        return data;
    }
}

export interface IDistribuidor {
    cedulajuridica?: string | undefined;
    nombre?: string | undefined;
    distribuidorUbicacion?: DistribuidorUbicacion | undefined;
    dispositivos?: Dispositivo[] | undefined;
}

export class Dispositivo implements IDispositivo {
    nombre?: string | undefined;
    numeroserie!: number;
    marca?: string | undefined;
    descripcion?: string | undefined;
    precio!: number;
    consumoelectrico!: number;
    nombretipodispositivo?: string | undefined;
    cedulajuridicadistribuidor?: string | undefined;
    nombreaposento?: string | undefined;
    correoelectronicousuario?: string | undefined;
    aposento?: Aposento | undefined;
    cedulajuridicadistribuidorNavigation?: Distribuidor | undefined;
    correoelectronicousuarioNavigation?: Usuario | undefined;
    nombretipodispositivoNavigation?: TipoDispositivo | undefined;
    certificadoGarantium?: CertificadoGarantium | undefined;
    duenoPasados?: DuenoPasado[] | undefined;
    facturaDispositivos?: FacturaDispositivo[] | undefined;
    pedidos?: Pedido[] | undefined;
    usos?: Uso[] | undefined;

    constructor(data?: IDispositivo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.nombre = _data["Nombre"];
            this.numeroserie = _data["Numeroserie"];
            this.marca = _data["Marca"];
            this.descripcion = _data["Descripcion"];
            this.precio = _data["Precio"];
            this.consumoelectrico = _data["Consumoelectrico"];
            this.nombretipodispositivo = _data["Nombretipodispositivo"];
            this.cedulajuridicadistribuidor = _data["Cedulajuridicadistribuidor"];
            this.nombreaposento = _data["Nombreaposento"];
            this.correoelectronicousuario = _data["Correoelectronicousuario"];
            this.aposento = _data["Aposento"] ? Aposento.fromJS(_data["Aposento"]) : <any>undefined;
            this.cedulajuridicadistribuidorNavigation = _data["CedulajuridicadistribuidorNavigation"] ? Distribuidor.fromJS(_data["CedulajuridicadistribuidorNavigation"]) : <any>undefined;
            this.correoelectronicousuarioNavigation = _data["CorreoelectronicousuarioNavigation"] ? Usuario.fromJS(_data["CorreoelectronicousuarioNavigation"]) : <any>undefined;
            this.nombretipodispositivoNavigation = _data["NombretipodispositivoNavigation"] ? TipoDispositivo.fromJS(_data["NombretipodispositivoNavigation"]) : <any>undefined;
            this.certificadoGarantium = _data["CertificadoGarantium"] ? CertificadoGarantium.fromJS(_data["CertificadoGarantium"]) : <any>undefined;
            if (Array.isArray(_data["DuenoPasados"])) {
                this.duenoPasados = [] as any;
                for (let item of _data["DuenoPasados"])
                    this.duenoPasados!.push(DuenoPasado.fromJS(item));
            }
            if (Array.isArray(_data["FacturaDispositivos"])) {
                this.facturaDispositivos = [] as any;
                for (let item of _data["FacturaDispositivos"])
                    this.facturaDispositivos!.push(FacturaDispositivo.fromJS(item));
            }
            if (Array.isArray(_data["Pedidos"])) {
                this.pedidos = [] as any;
                for (let item of _data["Pedidos"])
                    this.pedidos!.push(Pedido.fromJS(item));
            }
            if (Array.isArray(_data["Usos"])) {
                this.usos = [] as any;
                for (let item of _data["Usos"])
                    this.usos!.push(Uso.fromJS(item));
            }
        }
    }

    static fromJS(data: any): Dispositivo {
        data = typeof data === 'object' ? data : {};
        let result = new Dispositivo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Nombre"] = this.nombre;
        data["Numeroserie"] = this.numeroserie;
        data["Marca"] = this.marca;
        data["Descripcion"] = this.descripcion;
        data["Precio"] = this.precio;
        data["Consumoelectrico"] = this.consumoelectrico;
        data["Nombretipodispositivo"] = this.nombretipodispositivo;
        data["Cedulajuridicadistribuidor"] = this.cedulajuridicadistribuidor;
        data["Nombreaposento"] = this.nombreaposento;
        data["Correoelectronicousuario"] = this.correoelectronicousuario;
        data["Aposento"] = this.aposento ? this.aposento.toJSON() : <any>undefined;
        data["CedulajuridicadistribuidorNavigation"] = this.cedulajuridicadistribuidorNavigation ? this.cedulajuridicadistribuidorNavigation.toJSON() : <any>undefined;
        data["CorreoelectronicousuarioNavigation"] = this.correoelectronicousuarioNavigation ? this.correoelectronicousuarioNavigation.toJSON() : <any>undefined;
        data["NombretipodispositivoNavigation"] = this.nombretipodispositivoNavigation ? this.nombretipodispositivoNavigation.toJSON() : <any>undefined;
        data["CertificadoGarantium"] = this.certificadoGarantium ? this.certificadoGarantium.toJSON() : <any>undefined;
        if (Array.isArray(this.duenoPasados)) {
            data["DuenoPasados"] = [];
            for (let item of this.duenoPasados)
                data["DuenoPasados"].push(item.toJSON());
        }
        if (Array.isArray(this.facturaDispositivos)) {
            data["FacturaDispositivos"] = [];
            for (let item of this.facturaDispositivos)
                data["FacturaDispositivos"].push(item.toJSON());
        }
        if (Array.isArray(this.pedidos)) {
            data["Pedidos"] = [];
            for (let item of this.pedidos)
                data["Pedidos"].push(item.toJSON());
        }
        if (Array.isArray(this.usos)) {
            data["Usos"] = [];
            for (let item of this.usos)
                data["Usos"].push(item.toJSON());
        }
        return data;
    }
}

export interface IDispositivo {
    nombre?: string | undefined;
    numeroserie: number;
    marca?: string | undefined;
    descripcion?: string | undefined;
    precio: number;
    consumoelectrico: number;
    nombretipodispositivo?: string | undefined;
    cedulajuridicadistribuidor?: string | undefined;
    nombreaposento?: string | undefined;
    correoelectronicousuario?: string | undefined;
    aposento?: Aposento | undefined;
    cedulajuridicadistribuidorNavigation?: Distribuidor | undefined;
    correoelectronicousuarioNavigation?: Usuario | undefined;
    nombretipodispositivoNavigation?: TipoDispositivo | undefined;
    certificadoGarantium?: CertificadoGarantium | undefined;
    duenoPasados?: DuenoPasado[] | undefined;
    facturaDispositivos?: FacturaDispositivo[] | undefined;
    pedidos?: Pedido[] | undefined;
    usos?: Uso[] | undefined;
}

export class TipoDispositivo implements ITipoDispositivo {
    nombre?: string | undefined;
    descripcion?: string | undefined;
    tiempogarantia!: number;
    imagen?: string | undefined;
    certificadoGarantia?: CertificadoGarantium[] | undefined;
    dispositivos?: Dispositivo[] | undefined;

    constructor(data?: ITipoDispositivo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.nombre = _data["Nombre"];
            this.descripcion = _data["Descripcion"];
            this.tiempogarantia = _data["Tiempogarantia"];
            this.imagen = _data["Imagen"];
            if (Array.isArray(_data["CertificadoGarantia"])) {
                this.certificadoGarantia = [] as any;
                for (let item of _data["CertificadoGarantia"])
                    this.certificadoGarantia!.push(CertificadoGarantium.fromJS(item));
            }
            if (Array.isArray(_data["Dispositivos"])) {
                this.dispositivos = [] as any;
                for (let item of _data["Dispositivos"])
                    this.dispositivos!.push(Dispositivo.fromJS(item));
            }
        }
    }

    static fromJS(data: any): TipoDispositivo {
        data = typeof data === 'object' ? data : {};
        let result = new TipoDispositivo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Nombre"] = this.nombre;
        data["Descripcion"] = this.descripcion;
        data["Tiempogarantia"] = this.tiempogarantia;
        data["Imagen"] = this.imagen;
        if (Array.isArray(this.certificadoGarantia)) {
            data["CertificadoGarantia"] = [];
            for (let item of this.certificadoGarantia)
                data["CertificadoGarantia"].push(item.toJSON());
        }
        if (Array.isArray(this.dispositivos)) {
            data["Dispositivos"] = [];
            for (let item of this.dispositivos)
                data["Dispositivos"].push(item.toJSON());
        }
        return data;
    }
}

export interface ITipoDispositivo {
    nombre?: string | undefined;
    descripcion?: string | undefined;
    tiempogarantia: number;
    imagen?: string | undefined;
    certificadoGarantia?: CertificadoGarantium[] | undefined;
    dispositivos?: Dispositivo[] | undefined;
}

export class CertificadoGarantium implements ICertificadoGarantium {
    fechacompra!: Date;
    nombretipodispositivo?: string | undefined;
    numeroseriedispositivo!: number;
    correoelectronicousuario?: string | undefined;
    fechafinalizacion!: Date;
    correoelectronicousuarioNavigation?: Usuario | undefined;
    nombretipodispositivoNavigation?: TipoDispositivo | undefined;
    numeroseriedispositivoNavigation?: Dispositivo | undefined;

    constructor(data?: ICertificadoGarantium) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.fechacompra = _data["Fechacompra"] ? new Date(_data["Fechacompra"].toString()) : <any>undefined;
            this.nombretipodispositivo = _data["Nombretipodispositivo"];
            this.numeroseriedispositivo = _data["Numeroseriedispositivo"];
            this.correoelectronicousuario = _data["Correoelectronicousuario"];
            this.fechafinalizacion = _data["Fechafinalizacion"] ? new Date(_data["Fechafinalizacion"].toString()) : <any>undefined;
            this.correoelectronicousuarioNavigation = _data["CorreoelectronicousuarioNavigation"] ? Usuario.fromJS(_data["CorreoelectronicousuarioNavigation"]) : <any>undefined;
            this.nombretipodispositivoNavigation = _data["NombretipodispositivoNavigation"] ? TipoDispositivo.fromJS(_data["NombretipodispositivoNavigation"]) : <any>undefined;
            this.numeroseriedispositivoNavigation = _data["NumeroseriedispositivoNavigation"] ? Dispositivo.fromJS(_data["NumeroseriedispositivoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CertificadoGarantium {
        data = typeof data === 'object' ? data : {};
        let result = new CertificadoGarantium();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Fechacompra"] = this.fechacompra ? this.fechacompra.toISOString() : <any>undefined;
        data["Nombretipodispositivo"] = this.nombretipodispositivo;
        data["Numeroseriedispositivo"] = this.numeroseriedispositivo;
        data["Correoelectronicousuario"] = this.correoelectronicousuario;
        data["Fechafinalizacion"] = this.fechafinalizacion ? this.fechafinalizacion.toISOString() : <any>undefined;
        data["CorreoelectronicousuarioNavigation"] = this.correoelectronicousuarioNavigation ? this.correoelectronicousuarioNavigation.toJSON() : <any>undefined;
        data["NombretipodispositivoNavigation"] = this.nombretipodispositivoNavigation ? this.nombretipodispositivoNavigation.toJSON() : <any>undefined;
        data["NumeroseriedispositivoNavigation"] = this.numeroseriedispositivoNavigation ? this.numeroseriedispositivoNavigation.toJSON() : <any>undefined;
        return data;
    }
}

export interface ICertificadoGarantium {
    fechacompra: Date;
    nombretipodispositivo?: string | undefined;
    numeroseriedispositivo: number;
    correoelectronicousuario?: string | undefined;
    fechafinalizacion: Date;
    correoelectronicousuarioNavigation?: Usuario | undefined;
    nombretipodispositivoNavigation?: TipoDispositivo | undefined;
    numeroseriedispositivoNavigation?: Dispositivo | undefined;
}

export class DuenoPasado implements IDuenoPasado {
    dispnumeroserie!: number;
    correoelectronicousuario?: string | undefined;
    correoelectronicousuarioNavigation?: Usuario | undefined;
    dispnumeroserieNavigation?: Dispositivo | undefined;

    constructor(data?: IDuenoPasado) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.dispnumeroserie = _data["Dispnumeroserie"];
            this.correoelectronicousuario = _data["Correoelectronicousuario"];
            this.correoelectronicousuarioNavigation = _data["CorreoelectronicousuarioNavigation"] ? Usuario.fromJS(_data["CorreoelectronicousuarioNavigation"]) : <any>undefined;
            this.dispnumeroserieNavigation = _data["DispnumeroserieNavigation"] ? Dispositivo.fromJS(_data["DispnumeroserieNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): DuenoPasado {
        data = typeof data === 'object' ? data : {};
        let result = new DuenoPasado();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Dispnumeroserie"] = this.dispnumeroserie;
        data["Correoelectronicousuario"] = this.correoelectronicousuario;
        data["CorreoelectronicousuarioNavigation"] = this.correoelectronicousuarioNavigation ? this.correoelectronicousuarioNavigation.toJSON() : <any>undefined;
        data["DispnumeroserieNavigation"] = this.dispnumeroserieNavigation ? this.dispnumeroserieNavigation.toJSON() : <any>undefined;
        return data;
    }
}

export interface IDuenoPasado {
    dispnumeroserie: number;
    correoelectronicousuario?: string | undefined;
    correoelectronicousuarioNavigation?: Usuario | undefined;
    dispnumeroserieNavigation?: Dispositivo | undefined;
}

export class FacturaDispositivo implements IFacturaDispositivo {
    numerofactura!: number;
    numeroseriedispositivo?: number | undefined;
    numerofacturaNavigation?: Factura | undefined;
    numeroseriedispositivoNavigation?: Dispositivo | undefined;

    constructor(data?: IFacturaDispositivo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.numerofactura = _data["Numerofactura"];
            this.numeroseriedispositivo = _data["Numeroseriedispositivo"];
            this.numerofacturaNavigation = _data["NumerofacturaNavigation"] ? Factura.fromJS(_data["NumerofacturaNavigation"]) : <any>undefined;
            this.numeroseriedispositivoNavigation = _data["NumeroseriedispositivoNavigation"] ? Dispositivo.fromJS(_data["NumeroseriedispositivoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): FacturaDispositivo {
        data = typeof data === 'object' ? data : {};
        let result = new FacturaDispositivo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Numerofactura"] = this.numerofactura;
        data["Numeroseriedispositivo"] = this.numeroseriedispositivo;
        data["NumerofacturaNavigation"] = this.numerofacturaNavigation ? this.numerofacturaNavigation.toJSON() : <any>undefined;
        data["NumeroseriedispositivoNavigation"] = this.numeroseriedispositivoNavigation ? this.numeroseriedispositivoNavigation.toJSON() : <any>undefined;
        return data;
    }
}

export interface IFacturaDispositivo {
    numerofactura: number;
    numeroseriedispositivo?: number | undefined;
    numerofacturaNavigation?: Factura | undefined;
    numeroseriedispositivoNavigation?: Dispositivo | undefined;
}

export class Factura implements IFactura {
    numero!: number;
    fecha!: Date;
    precio!: number;
    facturaDispositivo?: FacturaDispositivo | undefined;

    constructor(data?: IFactura) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.numero = _data["Numero"];
            this.fecha = _data["Fecha"] ? new Date(_data["Fecha"].toString()) : <any>undefined;
            this.precio = _data["Precio"];
            this.facturaDispositivo = _data["FacturaDispositivo"] ? FacturaDispositivo.fromJS(_data["FacturaDispositivo"]) : <any>undefined;
        }
    }

    static fromJS(data: any): Factura {
        data = typeof data === 'object' ? data : {};
        let result = new Factura();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Numero"] = this.numero;
        data["Fecha"] = this.fecha ? this.fecha.toISOString() : <any>undefined;
        data["Precio"] = this.precio;
        data["FacturaDispositivo"] = this.facturaDispositivo ? this.facturaDispositivo.toJSON() : <any>undefined;
        return data;
    }
}

export interface IFactura {
    numero: number;
    fecha: Date;
    precio: number;
    facturaDispositivo?: FacturaDispositivo | undefined;
}

export class Pedido implements IPedido {
    monto!: number;
    fecha?: Date | undefined;
    hora?: string | undefined;
    consecutivo!: number;
    numeroseriedispositivo?: number | undefined;
    correoelectronicousuario?: string | undefined;
    direccionusuarioid!: number;
    correoelectronicousuarioNavigation?: Usuario | undefined;
    numeroseriedispositivoNavigation?: Dispositivo | undefined;

    constructor(data?: IPedido) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.monto = _data["Monto"];
            this.fecha = _data["Fecha"] ? new Date(_data["Fecha"].toString()) : <any>undefined;
            this.hora = _data["Hora"];
            this.consecutivo = _data["Consecutivo"];
            this.numeroseriedispositivo = _data["Numeroseriedispositivo"];
            this.correoelectronicousuario = _data["Correoelectronicousuario"];
            this.direccionusuarioid = _data["Direccionusuarioid"];
            this.correoelectronicousuarioNavigation = _data["CorreoelectronicousuarioNavigation"] ? Usuario.fromJS(_data["CorreoelectronicousuarioNavigation"]) : <any>undefined;
            this.numeroseriedispositivoNavigation = _data["NumeroseriedispositivoNavigation"] ? Dispositivo.fromJS(_data["NumeroseriedispositivoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): Pedido {
        data = typeof data === 'object' ? data : {};
        let result = new Pedido();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Monto"] = this.monto;
        data["Fecha"] = this.fecha ? this.fecha.toISOString() : <any>undefined;
        data["Hora"] = this.hora;
        data["Consecutivo"] = this.consecutivo;
        data["Numeroseriedispositivo"] = this.numeroseriedispositivo;
        data["Correoelectronicousuario"] = this.correoelectronicousuario;
        data["Direccionusuarioid"] = this.direccionusuarioid;
        data["CorreoelectronicousuarioNavigation"] = this.correoelectronicousuarioNavigation ? this.correoelectronicousuarioNavigation.toJSON() : <any>undefined;
        data["NumeroseriedispositivoNavigation"] = this.numeroseriedispositivoNavigation ? this.numeroseriedispositivoNavigation.toJSON() : <any>undefined;
        return data;
    }
}

export interface IPedido {
    monto: number;
    fecha?: Date | undefined;
    hora?: string | undefined;
    consecutivo: number;
    numeroseriedispositivo?: number | undefined;
    correoelectronicousuario?: string | undefined;
    direccionusuarioid: number;
    correoelectronicousuarioNavigation?: Usuario | undefined;
    numeroseriedispositivoNavigation?: Dispositivo | undefined;
}

export class Uso implements IUso {
    identif!: number;
    duracion!: string;
    fecha!: Date;
    numeroseriedispositivo!: number;
    numeroseriedispositivoNavigation?: Dispositivo | undefined;

    constructor(data?: IUso) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.identif = _data["Identif"];
            this.duracion = _data["Duracion"];
            this.fecha = _data["Fecha"] ? new Date(_data["Fecha"].toString()) : <any>undefined;
            this.numeroseriedispositivo = _data["Numeroseriedispositivo"];
            this.numeroseriedispositivoNavigation = _data["NumeroseriedispositivoNavigation"] ? Dispositivo.fromJS(_data["NumeroseriedispositivoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): Uso {
        data = typeof data === 'object' ? data : {};
        let result = new Uso();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Identif"] = this.identif;
        data["Duracion"] = this.duracion;
        data["Fecha"] = this.fecha ? this.fecha.toISOString() : <any>undefined;
        data["Numeroseriedispositivo"] = this.numeroseriedispositivo;
        data["NumeroseriedispositivoNavigation"] = this.numeroseriedispositivoNavigation ? this.numeroseriedispositivoNavigation.toJSON() : <any>undefined;
        return data;
    }
}

export interface IUso {
    identif: number;
    duracion: string;
    fecha: Date;
    numeroseriedispositivo: number;
    numeroseriedispositivoNavigation?: Dispositivo | undefined;
}

export class UsuarioDireccion implements IUsuarioDireccion {
    indicaciones?: string | undefined;
    ciudad?: string | undefined;
    codigopostal!: number;
    id!: number;
    correoelectronicousuario?: string | undefined;
    correoelectronicousuarioNavigation?: Usuario | undefined;

    constructor(data?: IUsuarioDireccion) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.indicaciones = _data["Indicaciones"];
            this.ciudad = _data["Ciudad"];
            this.codigopostal = _data["Codigopostal"];
            this.id = _data["Id"];
            this.correoelectronicousuario = _data["Correoelectronicousuario"];
            this.correoelectronicousuarioNavigation = _data["CorreoelectronicousuarioNavigation"] ? Usuario.fromJS(_data["CorreoelectronicousuarioNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): UsuarioDireccion {
        data = typeof data === 'object' ? data : {};
        let result = new UsuarioDireccion();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Indicaciones"] = this.indicaciones;
        data["Ciudad"] = this.ciudad;
        data["Codigopostal"] = this.codigopostal;
        data["Id"] = this.id;
        data["Correoelectronicousuario"] = this.correoelectronicousuario;
        data["CorreoelectronicousuarioNavigation"] = this.correoelectronicousuarioNavigation ? this.correoelectronicousuarioNavigation.toJSON() : <any>undefined;
        return data;
    }
}

export interface IUsuarioDireccion {
    indicaciones?: string | undefined;
    ciudad?: string | undefined;
    codigopostal: number;
    id: number;
    correoelectronicousuario?: string | undefined;
    correoelectronicousuarioNavigation?: Usuario | undefined;
}

export class Dispositivo_Tipo implements IDispositivo_Tipo {
    numeroserie!: number;
    marca?: string | undefined;
    descripcion?: string | undefined;
    consumoelectrico!: number;
    nombretipodispositivo?: string | undefined;
    precio!: number;
    imagen?: string | undefined;

    constructor(data?: IDispositivo_Tipo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.numeroserie = _data["Numeroserie"];
            this.marca = _data["Marca"];
            this.descripcion = _data["Descripcion"];
            this.consumoelectrico = _data["Consumoelectrico"];
            this.nombretipodispositivo = _data["Nombretipodispositivo"];
            this.precio = _data["Precio"];
            this.imagen = _data["Imagen"];
        }
    }

    static fromJS(data: any): Dispositivo_Tipo {
        data = typeof data === 'object' ? data : {};
        let result = new Dispositivo_Tipo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Numeroserie"] = this.numeroserie;
        data["Marca"] = this.marca;
        data["Descripcion"] = this.descripcion;
        data["Consumoelectrico"] = this.consumoelectrico;
        data["Nombretipodispositivo"] = this.nombretipodispositivo;
        data["Precio"] = this.precio;
        data["Imagen"] = this.imagen;
        return data;
    }
}

export interface IDispositivo_Tipo {
    numeroserie: number;
    marca?: string | undefined;
    descripcion?: string | undefined;
    consumoelectrico: number;
    nombretipodispositivo?: string | undefined;
    precio: number;
    imagen?: string | undefined;
}

export class NuevoPedido implements INuevoPedido {
    monto!: number;
    numeroseriedispositivo!: number;
    correoelectronicousuario?: string | undefined;
    direccionusuarioid!: number;

    constructor(data?: INuevoPedido) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.monto = _data["Monto"];
            this.numeroseriedispositivo = _data["Numeroseriedispositivo"];
            this.correoelectronicousuario = _data["Correoelectronicousuario"];
            this.direccionusuarioid = _data["Direccionusuarioid"];
        }
    }

    static fromJS(data: any): NuevoPedido {
        data = typeof data === 'object' ? data : {};
        let result = new NuevoPedido();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Monto"] = this.monto;
        data["Numeroseriedispositivo"] = this.numeroseriedispositivo;
        data["Correoelectronicousuario"] = this.correoelectronicousuario;
        data["Direccionusuarioid"] = this.direccionusuarioid;
        return data;
    }
}

export interface INuevoPedido {
    monto: number;
    numeroseriedispositivo: number;
    correoelectronicousuario?: string | undefined;
    direccionusuarioid: number;
}

export class UsoDiario implements IUsoDiario {
    dia!: Date;
    dispositivos!: number;
    hora!: number;

    constructor(data?: IUsoDiario) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.dia = _data["Dia"] ? new Date(_data["Dia"].toString()) : <any>undefined;
            this.dispositivos = _data["Dispositivos"];
            this.hora = _data["Hora"];
        }
    }

    static fromJS(data: any): UsoDiario {
        data = typeof data === 'object' ? data : {};
        let result = new UsoDiario();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Dia"] = this.dia ? this.dia.toISOString() : <any>undefined;
        data["Dispositivos"] = this.dispositivos;
        data["Hora"] = this.hora;
        return data;
    }
}

export interface IUsoDiario {
    dia: Date;
    dispositivos: number;
    hora: number;
}
export class UsoDispositivo implements IUsoDispositivo {
  numeroserie!: number;
  marca?: string | undefined;
  nombretipodispositivo?: string | undefined;
  correoelectronicousuario?: string | undefined;
  clase = 'Dispositivo';
  horasUso!: number;
  fecha!: Date;

  constructor(data?: IUsoDispositivo) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.numeroserie = _data["Numeroserie"];
      this.marca = _data["Marca"];
      this.nombretipodispositivo = _data["Nombretipodispositivo"];
      this.correoelectronicousuario = _data["Correoelectronicousuario"];
      this.horasUso = _data["HorasUso"];
      this.fecha = _data["Fecha"] ? new Date(_data["Fecha"].toString()) : <any>undefined;
    }
  }

  static fromJS(data: any): UsoDispositivo {
    data = typeof data === 'object' ? data : {};
    let result = new UsoDispositivo();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Numeroserie"] = this.numeroserie;
    data["Marca"] = this.marca;
    data["Nombretipodispositivo"] = this.nombretipodispositivo;
    data["Correoelectronicousuario"] = this.correoelectronicousuario;
    data["HorasUso"] = this.horasUso;
    data["Fecha"] = this.fecha ? this.fecha.toISOString() : <any>undefined;
    return data;
  }
}

export interface IUsoDispositivo {
  numeroserie: number;
  marca?: string | undefined;
  nombretipodispositivo?: string | undefined;
  correoelectronicousuario?: string | undefined;
  horasUso: number;
  fecha: Date;
}

export class UsoTipo implements IUsoTipo {
    nombretipodispositivo?: string | undefined;
    horasUso!: number;

    constructor(data?: IUsoTipo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.nombretipodispositivo = _data["Nombretipodispositivo"];
            this.horasUso = _data["HorasUso"];
        }
    }

    static fromJS(data: any): UsoTipo {
        data = typeof data === 'object' ? data : {};
        let result = new UsoTipo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["Nombretipodispositivo"] = this.nombretipodispositivo;
        data["HorasUso"] = this.horasUso;
        return data;
    }
}

export interface IUsoTipo {
    nombretipodispositivo?: string | undefined;
    horasUso: number;
}
