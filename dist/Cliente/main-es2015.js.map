{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/Enums/popup-type.enum.ts","./src/environments/environment.ts","./src/app/root/root.component.ts","./src/app/root/root.component.html","./src/app/fail-dialog/fail-dialog.component.html","./src/app/fail-dialog/fail-dialog.component.ts","./src/app/success-dialog/success-dialog.component.html","./src/app/success-dialog/success-dialog.component.ts","./src/app/app.module.ts","./src/app/store/store.component.ts","./src/app/store/store.component.html","./src/app/calendar/calendar/calendar.component.ts","./src/app/calendar/calendar/calendar.component.html","./src/app/activity-dialog/activity-dialog.component.ts","./src/app/activity-dialog/activity-dialog.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/Models/Cliente.ts","./src/app/services/api-interface.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {Component, ElementRef, EventEmitter, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {ApiInterfaceService} from '../services/api-interface.service';\r\nimport {SuccessDialogComponent} from '../success-dialog/success-dialog.component';\r\nimport {FailDialogComponent} from '../fail-dialog/fail-dialog.component';\r\nimport {HttpErrorResponse} from '@angular/common/http';\r\nimport {Cliente} from \"../Models/Cliente\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\n/**\r\n * Componente de registro\r\n */\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  form = new Cliente();\r\n  @Input() public editable: boolean;\r\n  @ViewChild('profileForm') profileForm: ElementRef;\r\n  sendAttempt = false;\r\n  errorMsg: string;\r\n  @ViewChild(SuccessDialogComponent) successDialogComponent: SuccessDialogComponent;\r\n  @ViewChild(FailDialogComponent) failDialogComponent: FailDialogComponent;\r\n\r\n  /**\r\n   * Constructor del componente\r\n   * @param apiInterfaceService Servicio de comunicacion con el api\r\n   */\r\n  constructor(private apiInterfaceService: ApiInterfaceService) {}\r\n\r\n  /**\r\n   * Metodo de inicio, inicializa los datos en null\r\n   */\r\n  ngOnInit(): void {\r\n    this.sendAttempt = false;\r\n  }\r\n\r\n  /**\r\n   * Metodo para enviar los datos de registro\r\n   */\r\n  register(): void{\r\n    this.sendAttempt = true;\r\n    console.log(this.form)\r\n    if (this.profileForm.nativeElement.checkValidity()){\r\n      this.apiInterfaceService.register(this.form).subscribe(\r\n        data => this.successDialogComponent.openModal(),\r\n        error => this.handleError(error)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Metodo para mostrar mensajes de error\r\n   * @param errorResponse tipo de error http\r\n   */\r\n  handleError(errorResponse: HttpErrorResponse): void {\r\n    console.log(errorResponse);\r\n    switch (errorResponse.status) {\r\n      case 409:\r\n        this.errorMsg = 'El correo o cedula indicados ya se encuentran registrados';\r\n        break;\r\n      case 400:\r\n        this.errorMsg = 'Error desconocido';\r\n        break;\r\n      case 500:\r\n        this.errorMsg = 'Error desconocido';\r\n        break;\r\n      case 0:\r\n        this.errorMsg = 'No se pudo conectar con el Servidor';\r\n        break;\r\n      default:\r\n        this.errorMsg = errorResponse.error;\r\n        break;\r\n    }\r\n    this.failDialogComponent.openModal();\r\n  }\r\n}\r\n","<div class=\"bg-image\">\n  <div id=\"general-block\" class=\"container-fluid\">\n    <div class=\"align-content-center border border-2 rounded shadow p-3 bg-body bg-light\">\n      <div class=\"row border-bottom\" style=\"width: 95%; margin: auto\">\n        <div style=\"width: 100%\">\n          <h4 class=\"text-center text-secondary\">Registro - GymTEC</h4>\n        </div>\n      </div>\n      <!-- Form -->\n      <form id=\"form\" #profileForm class=\"center-form\" (ngSubmit)=\"register()\"  >\n        <!-- Name -->\n        <div class=\"row\" >\n          <div class=\"col-md-6 col-sm-12 pr-md-1\">\n            <input required pattern=\"[A-Za-zÀ-ÖØ-öø-ÿ]*\" type=\"text\" id=\"firstName\" name=\"firstName\" class=\"form-control\"\n                   placeholder=\"Primer Nombre\" [(ngModel)]=\"form.nombre1\" #name=\"ngModel\"\n                   [class.is-invalid]=\"name.invalid && (name.dirty || name.touched|| sendAttempt)\">\n            <div class=\"invalid-feedback\">\n              Porfavor indique un nombre valido.\n            </div>\n          </div>\n          <div class=\"col-md-6 col-sm-12 pl-md-1 mt-3 mt-md-0\">\n            <input pattern=\"[A-Za-zÀ-ÖØ-öø-ÿ]*\" type=\"text\" id=\"secondName\" name=\"secondName\" class=\"form-control\"\n                   placeholder=\"Segundo Nombre\" [(ngModel)]=\"form.nombre2\" #name2=\"ngModel\"\n                   [class.is-invalid]=\"name2.invalid && (name2.dirty || name2.touched|| sendAttempt)\">\n            <div class=\"invalid-feedback\">\n              Porfavor indique un segundo nombre valido.\n            </div>\n          </div>\n        </div>\n        <!-- Last Name -->\n        <div class=\"row mt-3\">\n          <div class=\"col-md-6 col-sm-12 pr-md-1\">\n            <input required pattern=\"[A-Za-zÀ-ÖØ-öø-ÿ]*\" type=\"text\" id=\"lastName1\" name=\"lastName1\" class=\"form-control\"\n                   placeholder=\"Primer Apellido\" [(ngModel)]=\"form.apellido1\" #lname1=\"ngModel\"\n                   [class.is-invalid]=\"lname1.invalid && (lname1.dirty || lname1.touched|| sendAttempt)\">\n            <div class=\"invalid-feedback\">\n              Porfavor indique un apellido valido.\n            </div>\n          </div>\n          <div class=\"col-md-6 col-sm-12 pl-md-1 mt-3 mt-md-0\">\n            <input pattern=\"[A-Za-zÀ-ÖØ-öø-ÿ]*\" type=\"text\" id=\"lastName2\" name=\"lastName2\" class=\"form-control\"\n                   placeholder=\"Segundo Apellido\" [(ngModel)]=\"form.apellido2\" #lname2=\"ngModel\"\n                   [class.is-invalid]=\"lname2.invalid && (lname2.dirty || lname2.touched|| sendAttempt)\">\n            <div class=\"invalid-feedback\">\n              Porfavor indique un apellido valido.\n            </div>\n          </div>\n        </div>\n        <!-- Email y Cedula-->\n        <div class=\"row mt-3\">\n          <div class=\"col-md-6 col-sm-12 pr-md-1\">\n            <input required pattern='\\S+@\\S+\\.\\S+' type=\"email\" id=\"email\" name=\"email\" class=\"form-control\"\n                   placeholder=\"Correo Electrónico\" [(ngModel)]=\"form.correo\" #email=\"ngModel\"\n                   [class.is-invalid]=\"email.invalid && (email.dirty || email.touched|| sendAttempt)\">\n            <div class=\"invalid-feedback\">\n              Porfavor indique un email valido.\n            </div>\n          </div>\n          <div class=\"col-md-6 col-sm-12 pl-md-1 mt-3 mt-md-0\">\n            <input required pattern='[0-9]*' type=\"text\" id=\"cedula\" name=\"cedula\" class=\"form-control\"\n                   placeholder=\"Cédula\" [(ngModel)]=\"form.cedula\" #cedula=\"ngModel\"\n                   [class.is-invalid]=\"cedula.invalid && (cedula.dirty || cedula.touched|| sendAttempt)\">\n            <div class=\"invalid-feedback\">\n              Porfavor indique una cédula valida.\n            </div>\n          </div>\n        </div>\n        <!-- Password -->\n        <div class=\"row mt-3\">\n          <div class=\"col-12\">\n            <input required pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$\" type=\"password\" id=\"password\" name=\"password\" class=\"form-control\"\n                   placeholder=\"Contraseña\" [(ngModel)]=\"form.password\" #password=\"ngModel\"\n                   [class.is-invalid]=\"password.invalid && (password.dirty || password.touched|| sendAttempt)\">\n            <div class=\"invalid-feedback\">\n              La contraseña debe de tener al menos 8 carácteres, una mayúscula, una minúscula y un número.\n            </div>\n          </div>\n        </div>\n        <!-- Edad y Fecha de Nacimiento -->\n        <div class=\"row mt-3\">\n          <div class=\"col-md-6 col-sm-12 pr-md-1\">\n            <input required pattern=\"[0-9]*\" type=\"text\" id=\"age\" name=\"age\" class=\"form-control\"\n                   placeholder=\"Edad\" [(ngModel)]=\"form.edad\" #edad=\"ngModel\"\n                   [class.is-invalid]=\"edad.invalid && (edad.dirty || edad.touched|| sendAttempt)\">\n            <div class=\"invalid-feedback\">\n              Porfavor indique un texto valido.\n            </div>\n          </div>\n          <div class=\"col-md-6 col-sm-12 pl-md-1 mt-3 mt-md-0\">\n            <div class=\"input-group\">\n              <input placeholder=\"Nacimiento\"  type=\"text\" required\n                     class=\"form-control\" [(ngModel)]=\"form.fechanacimiento\"  ngbDatepicker #d=\"ngbDatepicker\"  #fechaNacimiento=\"ngModel\"\n                     [class.is-invalid]=\"fechaNacimiento.invalid && (fechaNacimiento.dirty || fechaNacimiento.touched|| (sendAttempt))\"\n                     id=\"birth\" name=\"birth\">\n              <div class=\"input-group-append\">\n                <button class=\"btn btn-outline-secondary rounded-right calendar\" (click)=\"d.toggle()\" type=\"button\">\n                  <i class=\"bi-calendar\"></i>\n                </button>\n              </div>\n              <div class=\"invalid-feedback\">\n                Porfavor indique una fecha válida.\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- Peso,  IMC -->\n\n        <div class=\"row mt-3\">\n          <div class=\"col-md-6 col-sm-12 pr-md-1\">\n            <input required pattern=\"[0-9]*\" type=\"text\" id=\"peso\" name=\"peso\" class=\"form-control\"\n                   placeholder=\"Peso\" [(ngModel)]=\"form.peso\" #peso=\"ngModel\"\n                   [class.is-invalid]=\"peso.invalid && (peso.dirty || peso.touched|| sendAttempt)\">\n            <div class=\"invalid-feedback\">\n              El peso debe ser numérico.\n            </div>\n          </div>\n          <div class=\"col-md-6 col-sm-12 pl-md-1 mt-3 mt-md-0\">\n            <input required pattern=\"[0-9]*\" type=\"text\" id=\"imc\" name=\"imc\" class=\"form-control\"\n                   placeholder=\"IMC\"  [(ngModel)]=\"form.imc\" #imc=\"ngModel\"\n                   [class.is-invalid]=\"imc.invalid && (imc.dirty || imc.touched|| (sendAttempt))\">\n            <div class=\"invalid-feedback\">\n              El IMC debe ser numérico.\n            </div>\n          </div>\n        </div>\n        <!-- Addresses -->\n        <div class=\"mt-3\">\n          <div class=\"row mt-3\">\n            <div class=\"col-6 pr-1\">\n              <input required pattern=\"[0-9A-Za-zÀ-ÖØ-öø-ÿ-\\s]*\" type=\"text\" id=\"city\" name=\"city\" class=\"form-control\"\n                     placeholder=\"Ciudad\" [(ngModel)]=\"form.ciudad\" #city=\"ngModel\"\n                     [class.is-invalid]=\"city.invalid && (city.dirty || city.touched|| sendAttempt)\">\n              <div class=\"invalid-feedback\">\n                Porfavor indique un texto valido.\n              </div>\n            </div>\n            <div class=\"col-6 pl-1\">\n              <input required pattern=\"[0-9]*\" type=\"text\" id=\"zip\" name=\"zip\" class=\"form-control\"\n                     placeholder=\"Código Postal\"  [(ngModel)]=\"form.codigopostal\" #zip=\"ngModel\"\n                     [class.is-invalid]=\"zip.invalid && (zip.dirty || zip.touched|| (sendAttempt))\">\n              <div class=\"invalid-feedback\">\n                El código postal debe ser numérico.\n              </div>\n            </div>\n          </div>\n          <div class=\"row mt-3\">\n\n            <div class=\"col-12\">\n              <input required pattern=\"[0-9A-Za-zÀ-ÖØ-öø-ÿ-\\s]*\" type=\"text\" id=\"address\" name=\"address\" class=\"form-control\"\n                     placeholder=\"{{'Indicaciones'}}\"  [(ngModel)]=\"form.indicaciones\" #add=\"ngModel\"\n                     [class.is-invalid]=\"add.invalid && (add.dirty || add.touched|| (sendAttempt))\">\n              <div class=\"invalid-feedback\">\n                Porfavor indique un texto valido.\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n      <div class=\"row mt-3\">\n        <div class=\"col-12 text-center\">\n          <button (click)=\"register()\" class=\"btn btn-success\">Registrarme</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"row mt-3\">\n      <div class=\"col-12 text-center\">\n        <p style=\"color: whitesmoke\">¿Ya tiene una cuenta? <a routerLink=\"/login\" class=\"link-primary\">Inicie Sesión</a></p>\n      </div>\n    </div>\n  </div>\n</div>\n\n<app-success-dialog [header]=\"'Registro Exitoso'\" [subheader]=\"''\"\n                    [message]=\"'Puede proceder a iniciar sesión'\"></app-success-dialog>\n\n<app-fail-dialog [header]=\"'Registro Fallido'\"\n                 [message]=\"errorMsg\"></app-fail-dialog>\n","export enum PopupTypeEnum {\n  Register,\n  Recall\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.css']\n})\n/**\n * Componen raiz general\n */\nexport class RootComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","<ng-template #failDialog>\n  <div class=\"modal-body\">\n    <div class=\"border-bottom text-center pb-1\">\n      <button type=\"button\" class=\"float-right close pull-right\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <h5 class=\"text-danger\">{{header}}</h5>\n    </div>\n    <div class=\"ml-3 mr-3 mt-2 text-center\">\n      <p>{{message}}</p>\n    </div>\n    <div class=\"text-center mt-1\">\n      <button type=\"button\" class=\"btn btn-danger ml-1\" (click)=\"closeModal()\">Ok</button>\n    </div>\n  </div>\n</ng-template>\n","import {Component, Input, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-fail-dialog',\n  templateUrl: './fail-dialog.component.html',\n  styleUrls: ['./fail-dialog.component.css']\n})\n/**\n * Componente para mostrar mensaje de error\n */\nexport class FailDialogComponent implements OnInit {\n\n  modalRef: BsModalRef;\n  @ViewChild('failDialog') failDialog: TemplateRef<any>;\n  @Input() header: string;\n  @Input() message: string;\n\n  /**\n   * Constructor\n   * @param modalService Servicio\n   */\n  constructor(private modalService: BsModalService) {}\n\n  ngOnInit(): void{\n  }\n\n  /**\n   * Metodo para abir\n   */\n  openModal(): void {\n    this.modalRef = this.modalService.show(this.failDialog, {class: 'modal-sm'});\n  }\n\n  /**\n   * Metodo para cerrar\n   */\n  closeModal(): void{\n    this.modalRef.hide();\n  }\n}\n","<ng-template #succesDialog>\n  <div class=\"modal-body\">\n      <div class=\"border-bottom text-center pb-2\">\n      <button type=\"button\" class=\"float-right close pull-right\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <h5 class=\"text-success\">{{header}}</h5>\n    </div>\n    <div class=\"ml-4 mr-4 mt-2 text-center\">\n      <h6>{{subheader}}</h6>\n      <p>{{message}}</p>\n    </div>\n    <div class=\"text-center mt-1\">\n      <button type=\"button\" class=\"btn btn-success ml-1\" (click)=\"closeModal()\">Ok</button>\n    </div>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild} from '@angular/core';\nimport {Device} from '../Models/Device';\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-success-dialog',\n  templateUrl: './success-dialog.component.html',\n  styleUrls: ['./success-dialog.component.css']\n})\n/**\n * Componente para mostrar un mensaje de exito\n */\nexport class SuccessDialogComponent implements OnInit {\n\n  modalRef: BsModalRef;\n  @Input() header: string;\n  @Input() subheader: string;\n  @Input() message: string;\n  @ViewChild('succesDialog') succesDialog: TemplateRef<any>;\n\n  /**\n   * Constructor\n   * @param modalService servicio\n   */\n  constructor(private modalService: BsModalService) {}\n\n  ngOnInit(): void{\n  }\n\n  /**\n   * Metodo para abrir el componente\n   */\n  openModal(): void {\n    this.modalRef = this.modalService.show(this.succesDialog, {class: 'modal-sm'});\n  }\n\n  /**\n   * Metodo para cerrar el componente\n   */\n  closeModal(): void{\n    this.modalRef.hide();\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MainComponent} from './main/main.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport { RootComponent } from './root/root.component';\r\nimport { StoreComponent, } from './store/store.component';\r\nimport { NouisliderModule } from 'ng2-nouislider';\r\nimport { NgxSliderModule} from '@angular-slider/ngx-slider';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { ActivityDialogComponent } from './activity-dialog/activity-dialog.component';\r\nimport { SuccessDialogComponent } from './success-dialog/success-dialog.component';\r\nimport { FailDialogComponent } from './fail-dialog/fail-dialog.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CalendarComponent } from './calendar/calendar/calendar.component';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MainComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    RootComponent,\r\n    StoreComponent,\r\n    ActivityDialogComponent,\r\n    SuccessDialogComponent,\r\n    FailDialogComponent,\r\n    CalendarComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    NouisliderModule,\r\n    NgxSliderModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    ModalModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory,\r\n    })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [RootComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, TemplateRef, ViewChild} from '@angular/core';\r\nimport {LabelType, NgxSliderModule, Options} from '@angular-slider/ngx-slider';\r\nimport {ActivityDialogComponent} from '../activity-dialog/activity-dialog.component';\r\nimport {SuccessDialogComponent} from '../success-dialog/success-dialog.component';\r\nimport {FailDialogComponent} from '../fail-dialog/fail-dialog.component';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {ApiInterfaceService} from '../services/api-interface.service';\r\nimport {HttpErrorResponse} from '@angular/common/http';\r\nimport {Usuario} from '../Models/Models';\r\nimport {Router} from '@angular/router';\r\nimport {Clase} from \"../Models/Clase\";\r\nimport {PopupTypeEnum} from \"../Enums/popup-type.enum\";\r\nimport {Sucursal} from \"../Models/Sucursal\";\r\nimport {Tipo} from \"../Models/Tipo\";\r\n\r\n@Component({\r\n  selector: 'app-store',\r\n  templateUrl: './store.component.html',\r\n  styleUrls: ['./store.component.css']\r\n})\r\n/**\r\n * Componenete tienda que muestra los productos y permite iniciar su compra\r\n */\r\nexport class StoreComponent implements OnInit{\r\n  popUpTypeEnum = PopupTypeEnum;\r\n  tipos: string[];\r\n  sucursales: string[];\r\n  filteredTipos: string[];\r\n  selectedTipos: boolean[];\r\n  filteredSucursales: string[];\r\n  selectedSucursales: boolean[];\r\n  minDate:any;\r\n  maxDate:any;\r\n  clases: Clase[];\r\n  classToOrder: Clase;\r\n  @ViewChild(ActivityDialogComponent) confirmDialogComponent: ActivityDialogComponent;\r\n  @ViewChild(SuccessDialogComponent) successDialogComponent: SuccessDialogComponent;\r\n  @ViewChild(FailDialogComponent) failDialogComponent: FailDialogComponent;\r\n  @ViewChild(NgxSliderModule) slide: NgxSliderModule;\r\n\r\n  window = window;\r\n  user: Usuario;\r\n  errorMsg: string;\r\n  errorMsgHeader: string;\r\n\r\n  /**\r\n   * Constructor de la calse\r\n   * @param cookieService CookieService\r\n   * @param apiInterfaceService Interfaz de comunicacion con el api\r\n   * @param router Router de navegacion\r\n   * @param elementRef Instrumento para usar elementos dom\r\n   */\r\n  constructor(private cookieService: CookieService, private apiInterfaceService: ApiInterfaceService,\r\n              private router: Router, private elementRef: ElementRef) {}\r\n\r\n  /**\r\n   * Método para cargar los elementos a la tienda al iniciar\r\n   */\r\n  ngOnInit(): void {\r\n/*\r\n    this.clases = [{fecha:new Date(),modalidad: 'sa',sucursal: '1', instructor: 'juan', horafinalizacion:3,\r\n                    horainicio: 0, tipo: 'Yoga', imagen:'https://www.webconsultas.com/sites/default/files/styles/wc_adaptive_image__small/public/temas/yoga.jpg'},\r\n      {fecha:new Date(),modalidad: 'sa',sucursal: '1', instructor: 'juan', horafinalizacion:3,\r\n        horainicio: 0, tipo: 'Yoga', imagen:'https://www.webconsultas.com/sites/default/files/styles/wc_adaptive_image__small/public/temas/yoga.jpg'},\r\n      {fecha:new Date(),modalidad: 'sa',sucursal: '1', instructor: 'juan', horafinalizacion:3,\r\n        horainicio: 0, tipo: 'Yoga', imagen:'https://www.webconsultas.com/sites/default/files/styles/wc_adaptive_image__small/public/temas/yoga.jpg'},{fecha:new Date(),modalidad: 'sa',sucursal: '1', instructor: 'juan', horafinalizacion:3,\r\n        horainicio: 0, tipo: 'Yoga', imagen:'https://www.webconsultas.com/sites/default/files/styles/wc_adaptive_image__small/public/temas/yoga.jpg'},{fecha:new Date(),modalidad: 'sa',sucursal: '1', instructor: 'juan', horafinalizacion:3,\r\n        horainicio: 0, tipo: 'Yoga', imagen:'https://www.webconsultas.com/sites/default/files/styles/wc_adaptive_image__small/public/temas/yoga.jpg'},{fecha:new Date(),modalidad: 'sa',sucursal: '1', instructor: 'juan', horafinalizacion:3,\r\n        horainicio: 0, tipo: 'Yoga', imagen:'https://www.webconsultas.com/sites/default/files/styles/wc_adaptive_image__small/public/temas/yoga.jpg'},{fecha:new Date(),modalidad: 'sa',sucursal: '1', instructor: 'juan', horafinalizacion:3,\r\n        horainicio: 0, tipo: 'Yoga', imagen:'https://www.webconsultas.com/sites/default/files/styles/wc_adaptive_image__small/public/temas/yoga.jpg'},{fecha:new Date(),modalidad: 'sa',sucursal: '1', instructor: 'juan', horafinalizacion:3,\r\n        horainicio: 0, tipo: 'Yoga', imagen:'https://www.webconsultas.com/sites/default/files/styles/wc_adaptive_image__small/public/temas/yoga.jpg'},{fecha:new Date(),modalidad: 'sa',sucursal: '1', instructor: 'juan', horafinalizacion:3,\r\n        horainicio: 0, tipo: 'Yoga', imagen:'https://www.webconsultas.com/sites/default/files/styles/wc_adaptive_image__small/public/temas/yoga.jpg'}]\r\n*/\r\n/*\r\n    this.sucursales = ['1','todas']\r\n    this.tipos = ['Yoga', 'todas']\r\n*/\r\n    this.minDate= {year: 2010, month: 2, day:20};\r\n    this.maxDate= {year: 2023, month: 2, day:20};\r\n\r\n    this.cookieService.get('email')\r\n    this.cookieService.get('password')\r\n    // this.apiInterfaceService.getUserData().subscribe(\r\n    //   data => {this.user = data;},\r\n    //   error => this.handleError(error)\r\n    // );\r\n    this.apiInterfaceService.getTipos().subscribe(\r\n      data => {\r\n        this.tipos = data.map(d=>d.tipo);\r\n        this.selectedTipos = this.tipos.map(u=>true);\r\n        this.filteredTipos = this.tipos;\r\n        this.apiInterfaceService.getSucursales().subscribe(\r\n          data => {this.sucursales = data.map(d=>d.Nombre);\r\n            this.selectedSucursales = this.sucursales.map(u=>true);\r\n            this.filteredSucursales = this.sucursales;\r\n            this.updateClases()},\r\n          error => {this.handleError(error);console.log(error);}\r\n        );},\r\n      error => {this.handleError(error);console.log(error);}\r\n    );\r\n  }\r\n  /**\r\n   * Metodo para recargar los dispositivos del api\r\n   */\r\n  updateClases(): void{\r\n    this.apiInterfaceService.getClasesFiltered(this.filteredSucursales, this.filteredTipos, this.minDate, this.maxDate).subscribe(\r\n      data => {this.clases = data;\r\n                    this.clases.forEach(c=>{c.DatetimeFinal = new Date(c.DatetimeFinal);\r\n                     c.DatetimeInicio = new Date(c.DatetimeInicio)})\r\n                     console.log(this.clases)},\r\n      error => {this.handleError(error);console.log(error)}\r\n    );\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Método para filtrar los tipos seleccionados\r\n   * @param i Tipo en el que se hizo click\r\n   */\r\n  tipoSelected(i): void{\r\n    this.selectedTipos[i] = !this.selectedTipos[i];\r\n    this.filteredTipos = this.tipos.filter((d, ind) => this.selectedTipos[ind]);\r\n    this.updateClases()\r\n  }\r\n\r\n  /**\r\n   * Método para filtrar las sucursales seleccionadas\r\n   * @param i Tipo en el que se hizo click\r\n   */\r\n  sucursalSelected(i): void{\r\n    this.selectedSucursales[i] = !this.selectedSucursales[i];\r\n    this.filteredSucursales = this.sucursales.filter((d, ind) => this.selectedSucursales[ind]);\r\n    this.updateClases()\r\n  }\r\n\r\n  /**\r\n   * Método para iniciar la compra del i-esimo producto\r\n   * @param i Numero del producto en pantalla\r\n   */\r\n  order(i): void {\r\n    console.log(this.minDate)\r\n    this.classToOrder = this.clases[i];\r\n    this.confirmDialogComponent.openModal(this.classToOrder);\r\n  }\r\n\r\n  /**\r\n   * Método que llama al api al confirmar la compra\r\n   * @param confirm Booleano que indica si se confirma la compra\r\n   */\r\n  confirmOrder(confirm): void{\r\n    if (confirm) {\r\n      console.log(\"ordering\")\r\n      console.log(this.classToOrder.Identificador)\r\n      this.apiInterfaceService.postRegistro(this.classToOrder.Identificador).subscribe(\r\n        success => {\r\n              this.successDialogComponent.openModal();\r\n              console.log(success);\r\n              this.updateClases(); },\r\n            fail => {\r\n              this.errorMsgHeader = 'Error - El registro no se procesó';\r\n              this.errorMsg = 'Verifique su conexión e intente realizar el registro nuevamente. Si el problema persiste, contacte al administrador.';\r\n              this.failDialogComponent.openModal();\r\n              console.log(fail);\r\n              this.updateClases();\r\n            }\r\n      )\r\n\r\n    }else{\r\n      this.classToOrder = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método para comunicar los errores http al usuario\r\n   * @param errorResponse Error http\r\n   */\r\n  handleError(errorResponse: HttpErrorResponse): void {\r\n    console.log(errorResponse.status);\r\n    this.errorMsgHeader = 'Error';\r\n    switch (errorResponse.status) {\r\n      case 0:\r\n        this.errorMsg = 'No se pudo conectar con el Servidor';\r\n        break;\r\n      default:\r\n        this.errorMsg = 'Error desconocido';\r\n        break;\r\n    }\r\n    const element = this.elementRef.nativeElement;\r\n\r\n    /**\r\n     * Método para evitar enviar mensajes si el componente no es visible\r\n     */\r\n    if (element.offsetParent !== null) {\r\n      // element is  visible\r\n      this.failDialogComponent.openModal();\r\n    }\r\n  }\r\n}\r\n","<div class=\"float-left border-right filter\" style=\"overflow-y: auto\">\r\n  <div class=\"text-center\">\r\n    <h5 class=\"text-black mt-3 mb-3\">Sucursal</h5>\r\n    <div style=\"margin-left: 40%\" *ngFor=\"let sucursal of sucursales; index as i\">\r\n      <div class=\"form-check mt-1 text-left\">\r\n        <input class=\"form-check-input\" type=\"checkbox\" value=\"true\" id=\"{{'s'+i}}\"  name=\"{{'s'+i}}\" [checked]=\"selectedSucursales[i]\" (click)=\"sucursalSelected(i)\">\r\n        <label class=\"form-check-label\" for=\"{{'s'+i}}\">\r\n          {{sucursal}}\r\n        </label>\r\n      </div>\r\n    </div>\r\n    <h5 class=\"text-black mt-3 mb-3\">Tipo</h5>\r\n    <div style=\"margin-left: 40%\" *ngFor=\"let tipo of tipos; index as i\">\r\n      <div class=\"form-check mt-1 text-left\">\r\n        <input class=\"form-check-input\" type=\"checkbox\" value=\"true\" id=\"{{'t'+i}}\"  name=\"{{'t'+i}}\" [checked]=\"selectedTipos[i]\" (click)=\"tipoSelected(i)\">\r\n        <label class=\"form-check-label\" for=\"{{'t'+i}}\">\r\n          {{tipo}}\r\n        </label>\r\n      </div>\r\n    </div>\r\n    <h5 class=\"text-black mt-3 mb-3\">Fecha Mínima</h5>\r\n    <div class=\"input-group\" style=\"width: 70%; margin:auto;\">\r\n      <input readonly class=\"form-control\" [(ngModel)]=\"minDate\"  (ngModelChange)=\"updateClases()\" ngbDatepicker\r\n             #d1=\"ngbDatepicker\"  id=\"minDate\" name=\"minDate\">\r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-outline-secondary rounded-right calendar\" (click)=\"d1.toggle()\" type=\"button\">\r\n          <i class=\"bi-calendar\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <h5 class=\"text-black mt-3 mb-3\">Fecha Máxima</h5>\r\n    <div class=\"input-group\" style=\"width: 70%; margin:auto;\">\r\n      <input readonly class=\"form-control\" [(ngModel)]=\"maxDate\"  (ngModelChange)=\"updateClases()\" ngbDatepicker\r\n             #d2=\"ngbDatepicker\"  id=\"maxDate\" name=\"maxDate\">\r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-outline-secondary rounded-right calendar\" (click)=\"d2.toggle()\" type=\"button\">\r\n          <i class=\"bi-calendar\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container-fluid general-store-block\">\r\n  <div class=\"store-block\">\r\n    <div class=\"row ml-auto mr-auto\" style=\"width: 95%\" >\r\n      <!--div class=\"col-lg-3 col-sm-6 col-md-4 p-2\" *ngFor=\"let device of orderedDevices.filter(inPriceRange).filter(inTypesRange); index as i\"-->\r\n      <ng-template [ngIf]=\"clases\">\r\n      <div class=\"col-lg-3 col-sm-6 col-md-4 p-2\" *ngFor=\"let clase of clases; index as i\">\r\n        <div class=\"border pb-2\">\r\n          <div class=\"bg-image\" [ngStyle]=\"{ 'background-image': 'url( ' + clase.Imagen + ')'}\"></div>\r\n          <div class=\"row ml-1 mt-2 mr-2\">\r\n            <div class=\"col-6\">\r\n              <div class=\"mt-1\">\r\n                <h6>{{clase.Tipo}}</h6>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-6 text-right\">\r\n              <button [disabled]=\"clase.CupoDisponible==0\" class=\"btn btn-primary car-btn\" (click)=\"order(i)\"><i class=\"bi bi-calendar-check-fill\"></i></button>\r\n            </div>\r\n          </div>\r\n          <div class=\"mt-2 border-top\">\r\n            <div class=\"row ml-1 mt-2 mb-2\">\r\n              <div class=\"col-12\">\r\n                <div class=\"text-muted\" style=\"font-size: small\">Fecha: {{clase.DatetimeInicio.toLocaleDateString()}}</div>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                <div class=\"text-muted\" style=\"font-size: small\">Hora de Inicio: {{clase.DatetimeInicio.toLocaleTimeString()}}</div>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                <div class=\"text-muted\" style=\"font-size: small\">Hora de Finalización: {{clase.DatetimeFinal.toLocaleTimeString()}}</div>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                <div class=\"text-muted\" style=\"font-size: small\">Modalidad: {{clase.Modalidad}}</div>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                <div class=\"text-muted\" style=\"font-size: small\">Instructor: {{clase.Instructor}}</div>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                <div class=\"text-muted\" style=\"font-size: small\">Sucursal: {{clase.ImpartidoEnSucursal}}</div>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                <div class=\"text-muted\" style=\"font-size: small\">Cupo Disponible: {{clase.CupoDisponible}}</div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<app-activity-dialog  [type]=\"popUpTypeEnum.Register\" (eventEmitter)=\"confirmOrder($event)\"></app-activity-dialog>\r\n<app-success-dialog [header]=\"'Registro Confirmado'\" [subheader]=\"'El registro se procesó exitosamente'\"\r\n                    [message]=\"'Se ha añadido la clase a su calendario'\"></app-success-dialog>\r\n<app-fail-dialog [header]=\"errorMsgHeader\"\r\n                 [message]=\"errorMsg\"></app-fail-dialog>\r\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  TemplateRef, ElementRef,\n} from '@angular/core';\nimport {\n  startOfDay,\n  endOfDay,\n  subDays,\n  addDays,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  addHours,\n} from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CalendarEvent,\n  CalendarEventAction,\n  CalendarEventTimesChangedEvent,\n  CalendarView,\n} from 'angular-calendar';\nimport {Clase} from \"../../Models/Clase\";\nimport {ActivityDialogComponent} from \"../../activity-dialog/activity-dialog.component\";\nimport {PopupTypeEnum} from \"../../Enums/popup-type.enum\";\nimport {ApiInterfaceService} from \"../../services/api-interface.service\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {FailDialogComponent} from \"../../fail-dialog/fail-dialog.component\";\nimport {Router} from \"@angular/router\";\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3',\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF',\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA',\n  },\n};\n\n@Component({\n  selector: 'calendar-component',\n  templateUrl: './calendar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./calendar.component.css'],\n})\nexport class CalendarComponent  {\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\n  @ViewChild(ActivityDialogComponent) confirmDialogComponent: ActivityDialogComponent;\n  @ViewChild(FailDialogComponent) failDialogComponent: FailDialogComponent;\n\n  popUpTypeEnum = PopupTypeEnum;\n  view: CalendarView = CalendarView.Week;\n  CalendarView = CalendarView;\n  viewDate: Date = new Date();\n  refresh: Subject<any> = new Subject();\n  events: CalendarEvent[] = [];\n  activeDayIsOpen: boolean = true;\n  clases: Clase[];\n  errorMsg: string;\n  errorMsgHeader: string;\n\n  constructor(private modal: NgbModal, private apiInterfaceService: ApiInterfaceService,\n              private router: Router, private elementRef: ElementRef) {\n    this.apiInterfaceService.getClasesCliente().subscribe(\n      data => {\n        this.clases = data;\n        console.log(this.clases);\n        this.clases.forEach(c=>{c.DatetimeFinal = new Date(c.DatetimeFinal);\n                                c.DatetimeInicio = new Date(c.DatetimeInicio)})\n        this.clases.forEach((c,i) => this.addClase(c,i));\n        this.refresh.next();\n      },\n      error => {this.handleError(error);console.log(error);}\n    );\n    // this.clases = [{fecha:new Date(),modalidad: 'sa',sucursal: '1', instructor: 'juan', horafinalizacion:3,\n    //   horainicio: 0, tipo: 'Yoga', imagen:'https://www.webconsultas.com/sites/default/files/styles/wc_adaptive_image__small/public/temas/yoga.jpg', id:\"1\", cupodisponible:0}]\n    console.log(this.clases)\n  }\n\n  eventTimesChanged({\n                      event,\n                      newStart,\n                      newEnd,\n                    }: CalendarEventTimesChangedEvent): void {\n    this.events = this.events.map((iEvent) => {\n      if (iEvent === event) {\n        return {\n          ...event,\n          start: newStart,\n          end: newEnd,\n        };\n      }\n      return iEvent;\n    });\n    this.handleEvent('Dropped or resized', event);\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n   // this.modalData = { event, action };\n   // this.modal.open(this.modalContent, { size: 'lg' });\n    this.confirmDialogComponent.openModal(this.clases[event.id]);\n  }\n\n  addClase(clase: Clase, pos: number): void {\n    this.events = [\n      ...this.events,\n      {\n        title: 'Clase de ' + clase.Tipo,\n        id: pos,\n        start: clase.DatetimeInicio,\n        end: clase.DatetimeFinal,\n        color: colors.red\n      },\n    ];\n  }\n\n  closeOpenMonthViewDay() {\n    this.activeDayIsOpen = false;\n  }\n\n  /**\n   * Método para comunicar los errores http al usuario\n   * @param errorResponse Error http\n   */\n  handleError(errorResponse: HttpErrorResponse): void {\n    console.log(errorResponse);\n    this.errorMsgHeader = 'Error';\n    switch (errorResponse.status) {\n      case 0:\n        this.errorMsg = 'No se pudo conectar con el Servidor';\n        break;\n      default:\n        this.errorMsg = 'Error desconocido';\n        break;\n    }\n    const element = this.elementRef.nativeElement;\n\n    /**\n     * Método para evitar enviar mensajes si el componente no es visible\n     */\n    if (element.offsetParent !== null) {\n      // element is  visible\n      this.failDialogComponent.openModal();\n    }\n  }\n\n}\n","<div class=\"mt-3\" style=\"width: 85%; margin: auto;\">\r\n  <div class=\"row text-center\">\r\n    <div class=\"col-md-4\">\r\n      <div class=\"btn-group\">\r\n        <div\r\n          class=\"btn btn-primary\"\r\n          mwlCalendarPreviousView\r\n          [view]=\"view\"\r\n          [(viewDate)]=\"viewDate\"\r\n          (viewDateChange)=\"closeOpenMonthViewDay()\"\r\n        >\r\n          Anterior\r\n        </div>\r\n        <div\r\n          class=\"btn btn-outline-secondary\"\r\n          mwlCalendarToday\r\n          [(viewDate)]=\"viewDate\"\r\n        >\r\n          Actual\r\n        </div>\r\n        <div\r\n          class=\"btn btn-primary\"\r\n          mwlCalendarNextView\r\n          [view]=\"view\"\r\n          [(viewDate)]=\"viewDate\"\r\n          (viewDateChange)=\"closeOpenMonthViewDay()\"\r\n        >\r\n          Siguiente\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\r\n    </div>\r\n  </div>\r\n  <br />\r\n\r\n  <div [ngSwitch]=\"view\" style=\"height: 75vh;overflow-y: hidden;overflow-x: hidden; padding-right:5px;\">\r\n    <mwl-calendar-week-view\r\n      *ngSwitchCase=\"CalendarView.Week\"\r\n      [viewDate]=\"viewDate\"\r\n      [events]=\"events\"\r\n      [refresh]=\"refresh\"\r\n      [hourSegments]=\"1\"\r\n      [hourSegmentHeight]=\"25\"\r\n      [dayStartHour]=\"6\"\r\n      [dayEndHour]=\"21\"\r\n      (eventClicked)=\"handleEvent('Clicked', $event.event)\"\r\n      (eventTimesChanged)=\"eventTimesChanged($event)\"\r\n    >\r\n    </mwl-calendar-week-view>\r\n  </div>\r\n</div>\r\n<app-activity-dialog [type]=\"popUpTypeEnum.Recall\"></app-activity-dialog>\r\n<app-fail-dialog [header]=\"'Error'\"\r\n                 [message]=\"'Error al comunicarse con el servidor'\"></app-fail-dialog>\r\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild} from '@angular/core';\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\nimport {Device} from '../Models/Device';\nimport {Dispositivo_Tipo} from '../Models/Models';\nimport {Clase} from \"../Models/Clase\";\nimport {PopupTypeEnum} from \"../Enums/popup-type.enum\";\n\n@Component({\n  selector: 'app-activity-dialog',\n  templateUrl: './activity-dialog.component.html',\n  styleUrls: ['./activity-dialog.component.css']\n})\n/**\n * Componente para confirmar una compra\n */\nexport class ActivityDialogComponent implements OnInit{\n\n  clase: Clase;\n  modalRef: BsModalRef;\n  popUpTypeEnum = PopupTypeEnum;\n  @Output() eventEmitter = new EventEmitter<boolean>();\n  @Input() type: PopupTypeEnum;\n  @ViewChild('confirmDialog') confirmDialog: TemplateRef<any>;\n\n  /**\n   * Metodo constructor\n   * @param modalService Servicio\n   */\n  constructor(private modalService: BsModalService) {}\n  ngOnInit(): void{\n  }\n\n  /**\n   * Metodo para abrir el dialogo de compra\n   * @param clase\n   */\n  openModal(clase: Clase): void {\n    this.modalRef = this.modalService.show(this.confirmDialog, {class: 'modal-md'});\n    this.clase = clase;\n  }\n\n  /**\n   * Metodo al confirmar la compra\n   * @param invalid booleano que indica si no son validos los datos\n   */\n  confirm(): void {\n    this.eventEmitter.emit(true);\n    this.hide();\n  }\n\n  /**\n   * Metodo para cancelar\n   */\n  decline(): void {\n    this.eventEmitter.emit(false);\n    this.hide();\n  }\n\n  /**\n   * Metodo para ocultar el dialogo\n   */\n  hide(): void{\n    this.modalRef.hide();\n  }\n\n}\n","<ng-template #confirmDialog>\n  <div class=\"modal-body\">\n    <div class=\"border-bottom text-center mb-4\">\n      <h5>\n        <div *ngIf=\"type==popUpTypeEnum.Register; else elseBlock\">\n          Confirmación de Registro\n        </div>\n        <ng-template #elseBlock>\n          Información de la Clase\n        </ng-template>\n      </h5>\n    </div>\n    <div class=\"row ml-5 mr-1\">\n      <div class=\"col-6\">\n        <div class=\"bg-image\" [ngStyle]=\"{ 'background-image': 'url(  ' + clase.Imagen + ')'}\"></div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"row\">\n          <div class=\"col-12\" style=\"font-size: 0.8em\">\n            <h6>{{clase.Tipo}}</h6>\n          </div>\n          <div class=\"col-12\">\n            <div class=\"text-muted\" style=\"font-size: small\">Fecha: {{clase.DatetimeInicio.toLocaleDateString()}}</div>\n          </div>\n          <div class=\"col-12\">\n            <div class=\"text-muted\" style=\"font-size: small\">Hora de Inicio: {{clase.DatetimeInicio.toLocaleTimeString()}}</div>\n          </div>\n          <div class=\"col-12\">\n            <div class=\"text-muted\" style=\"font-size: small\">Hora de Finalización: {{clase.DatetimeFinal.toLocaleTimeString()}}</div>\n          </div>\n          <div class=\"col-12\">\n            <div class=\"text-muted\" style=\"font-size: small\">Modalidad: {{clase.Modalidad}}</div>\n          </div>\n          <div class=\"col-12\">\n            <div class=\"text-muted\" style=\"font-size: small\">Sucursal: {{clase.ImpartidoEnSucursal}}</div>\n          </div>\n          <div class=\"col-12\">\n            <div class=\"text-muted\" style=\"font-size: small\">Instructor: {{clase.Instructor}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row ml-2\">\n      <div class=\"col-6\"></div>\n    </div>\n    <div class=\"text-center mt-3\">\n      <div *ngIf=\"type==popUpTypeEnum.Register; else elseBlock2\">\n          <button type=\"button\" class=\"btn btn-light mr-1\" (click)=\"decline()\" >Cancelar</button>\n          <button type=\"button\" class=\"btn btn-primary ml-1\" (click)=\"confirm()\">Confirmar Registro</button>\n      </div>\n      <ng-template #elseBlock2>\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"hide()\">Ok!</button>\n      </ng-template>\n    </div>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {MainComponent} from './main/main.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {StoreComponent} from './store/store.component';\r\nimport {CalendarComponent} from \"./calendar/calendar/calendar.component\";\r\n\r\n/**\r\n * Rutas definidas para la app\r\n */\r\nconst routes: Routes = [\r\n  { path: '',\r\n    component: MainComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'calendar',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path:  'store',\r\n        component:  StoreComponent\r\n      },\r\n      {\r\n        path:  'calendar',\r\n        component:  CalendarComponent\r\n      }\r\n      ]\r\n  },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {LoginUser} from '../Models/LoginUser';\r\nimport {Usuario} from '../Models/Models';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {ApiInterfaceService} from '../services/api-interface.service';\r\nimport {Cliente} from \"../Models/Cliente\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n/**\r\n * Componente para iniciar sesion\r\n */\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginData = new Cliente();\r\n  loginError = false;\r\n\r\n  /**\r\n   * Constructor\r\n   * @param router servicio\r\n   * @param apiInterfaceService servicio\r\n   * @param activatedRoute servicio\r\n   * @param cookieService servicio\r\n   */\r\n  constructor(private router: Router, private apiInterfaceService: ApiInterfaceService,\r\n              public activatedRoute: ActivatedRoute, private cookieService: CookieService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**\r\n   * Metodo para intentar iniciar sesion\r\n   */\r\n  onSubmit(): void{\r\n    this.cookieService.set('email', this.loginData.correo);\r\n    this.cookieService.set('password', this.loginData.password);\r\n    this.apiInterfaceService.login().subscribe(\r\n       sucess => {\r\n             this.apiInterfaceService.getUser().subscribe(data=>{\r\n               this.cookieService.set('cedula', data.cedula)\r\n               this.router.navigate(['/calendar'])\r\n             }, e=>console.log(e));},\r\n\r\n         error => {this.loginError = true; console.log(error)}\r\n    );\r\n  }\r\n  /**\r\n   * Metodo para cerrar el mensaje de error\r\n   */\r\n  closeError(): void {\r\n    this.loginError = false;\r\n  }\r\n}\r\n","<!-- Pagina de inicio de sesion -->\n\n<div class=\"bg-image\">\n  <div class=\"container-fluid\" id=\"general-block\" style=\"padding-top: 20vh\">\n    <!-- Cuadro principal -->\n    <div id=\"block\" class=\"shadow-lg p-3 mb-5 bg-body rounded border bg-light\">\n\n      <h3 class=\"text-secondary\"> Bienvenido a GymTEC </h3>\n\n      <!-- Form de Inicio de Sesion -->\n      <form id = \"form\" (ngSubmit)=\"onSubmit()\">\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <input type=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Correo electrónico\" [(ngModel)]=\"loginData.correo\" name=\"email\">\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Contraseña\" [(ngModel)]=\"loginData.password\" name=\"password\">\n          </div>\n        </div>\n\n        <ng-template [ngIf]=\"loginError\">\n          <div class=\"alert alert-danger alert-dismissible fade show mt-2\" style=\"padding-bottom: 20px; margin-bottom: -5px\">\n            <button type=\"button\" class=\"close\" (click)=\"closeError()\">&times;</button>\n            <strong>¡Error!</strong> No se pudo iniciar sesión.\n          </div>\n        </ng-template>\n        <div class=\"row mt-2\">\n          <input id=\"send-btn\" type=\"submit\" class=\"btn btn-success\" value=\"Iniciar Sesión\">\n        </div>\n\n      </form>\n\n    </div>\n    <div class=\"row\" style=\"margin-top: -40px\">\n      <div class=\"col-12 text-center\">\n        <p style=\"color: whitesmoke\">¿No tiene una cuenta? <a routerLink=\"/register\" class=\"link-primary\">Regístrese</a></p>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {HttpErrorResponse} from '@angular/common/http';\r\nimport {ApiInterfaceService} from '../services/api-interface.service';\r\nimport {Usuario} from '../Models/Models';\r\nimport {UserService} from '../services/user.service';\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\n/**\r\n * Componente principal dentro de la sesion de usuario\r\n */\r\nexport class MainComponent implements OnInit {\r\n\r\n  @ViewChild('dropdown') dropdown: ElementRef;\r\n  dropdownClicked = false;\r\n  oldDropdownClicked = false;\r\n  mainMenuClicked = false;\r\n  user: Usuario;\r\n\r\n  /**\r\n   * Constructor del metodo\r\n   * @param router servicio\r\n   * @param cookieService servicio\r\n   * @param apiInterfaceService\r\n   */\r\n  constructor(public router: Router, private cookieService: CookieService,\r\n              private apiInterfaceService: ApiInterfaceService) {\r\n  }\r\n\r\n  /**\r\n   * Metodo para cargar el email y verificar si cerrar sesion\r\n   */\r\n  ngOnInit(): void {\r\n    const email = this.cookieService.get('email');\r\n    console.log(email);\r\n    if (email === 'undefined' || email === ''){\r\n      this.router.navigate(['/login']);\r\n    }\r\n    this.apiInterfaceService.login().subscribe(\r\n      sucess => this.router.navigate(['/calendar']),\r\n      error => {console.log(error); this.handleError(error)}\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Metodo para checkear si hubo click en el componenete\r\n   */\r\n  mainClick(): void{\r\n    if (this.oldDropdownClicked){\r\n      this.dropdownClicked = false;\r\n    }else{\r\n      this.oldDropdownClicked = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Metodo para actualizar el estado del click\r\n   */\r\n  onDropDownClick(): void{\r\n    this.oldDropdownClicked = this.dropdownClicked;\r\n    this.dropdownClicked = !this.dropdownClicked;\r\n  }\r\n\r\n  /**\r\n   * Metodo para salir de la sesion\r\n   */\r\n  exit(): void{\r\n    this.cookieService.deleteAll();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  handleError(errorResponse: HttpErrorResponse): void {\r\n    console.log(errorResponse.status);\r\n    switch (errorResponse.status) {\r\n      case 404:\r\n       this.exit();\r\n       break;\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"navbar-store sticky-top\">\r\n  <nav (click)=\"mainClick()\" class=\"navbar navbar-expand-lg mr-auto navbar-dark bg-dark\">\r\n    <div class=\"container-fluid\">\r\n      <a class=\"navbar-brand\" routerLink=\"/store\">GymTEC</a>\r\n      <button class=\"navbar-toggler\" type=\"button\"  (click)=\"mainMenuClicked=!mainMenuClicked\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" [class.show]=\"mainMenuClicked\">\r\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" aria-current=\"page\"  [class.active]=\"router.url.includes('/store')\" routerLink=\"/store\">Buscar Clases</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" aria-current=\"page\" [class.active]=\"router.url.includes('/calendar')\" routerLink=\"/calendar\">Mis Clases</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" style=\"cursor: pointer\" (click)=\"exit()\">Salir</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</div>\r\n<router-outlet (click)=\"mainClick()\"  aria-current=\"page\"></router-outlet>\r\n","\r\nexport class Cliente {\r\n  nombre1: string;\r\n  nombre2: string;\r\n  apellido1: string;\r\n  apellido2: string;\r\n  cedula: string;\r\n  fechanacimiento: Date;\r\n  edad: number;\r\n  peso: number;\r\n  imc: number;\r\n  correo: string;\r\n  password: string;\r\n  ciudad: string;\r\n  codigopostal: number;\r\n  indicaciones: string;\r\n  constructor() {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {\r\n  Dispositivo,\r\n  Dispositivo_Tipo,\r\n  NuevoPedido,\r\n  Region,\r\n  TipoDispositivo,\r\n  UsoDiario,\r\n  UsoDispositivo,\r\n  UsoTipo,\r\n  Usuario\r\n} from '../Models/Models';\r\nimport {Observable} from 'rxjs';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {Cliente} from \"../Models/Cliente\";\r\nimport {Clase} from \"../Models/Clase\";\r\nimport {Sucursal} from \"../Models/Sucursal\";\r\nimport {Tipo} from \"../Models/Tipo\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Servicio de comunicación con el api\r\n */\r\nexport class ApiInterfaceService {\r\n\r\n  apiMongo = 'https://webapitecmongo.azurewebsites.net/';\r\n  apiSQL = 'https://webapigymtecsql.azurewebsites.net/';\r\n  /**\r\n   * Constructor del servicio\r\n   * @param httpClient Servicio http\r\n   * @param cookieService Servicio de cookies\r\n   */\r\n  constructor(private httpClient: HttpClient, private cookieService: CookieService) { }\r\n\r\n  /**\r\n   * Método para iniciar sesion\r\n   */\r\n  getUser(): Observable<Cliente>{\r\n    const email = this.cookieService.get('email');\r\n    return this.httpClient.get<Cliente>(this.apiMongo + 'api/clientes/'+email);\r\n  }\r\n\r\n  /**\r\n   * Método para iniciar sesion\r\n   */\r\n  login(): Observable<any>{\r\n    return this.httpClient.post<Usuario>(this.apiMongo + 'api/clientes/login',\r\n      {correo: this.cookieService.get('email'), password: this.cookieService.get('password')}\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Metodo para registrar un usuario\r\n   * @param user usuario a registrar\r\n   */\r\n  register(user: any): Observable<any>{\r\n    let userCopy = JSON.parse(JSON.stringify(user))\r\n    userCopy.fechanacimiento = new Date(user.fechanacimiento.year, user.fechanacimiento.month, user.fechanacimiento.day)\r\n    console.log(userCopy)\r\n    return this.httpClient.post<Usuario>(this.apiMongo + 'api/clientes', userCopy);\r\n  }\r\n\r\n  /**\r\n   * Metodo para obtener los dispositivos disponibles\r\n   */\r\n  getClasesFiltered(sucursales:string[], tipos: string[], minDate: any, maxDate: any): Observable<Clase[]>{\r\n    const cedula = this.cookieService.get(\"cedula\");\r\n    console.log(JSON.stringify(\r\n      { cedula: cedula,\r\n        sucursales:sucursales,\r\n        tipos: tipos,\r\n        minDate: new Date(minDate.year,minDate.month, minDate.day),\r\n        maxDate: new Date(maxDate.year,maxDate.month, maxDate.day)\r\n      }))\r\n    return this.httpClient.post<Clase[]>(this.apiSQL + 'api/clasefiltro',\r\n      { cedula: cedula,\r\n              sucursales:sucursales,\r\n              tipos: tipos,\r\n              minDate: new Date(minDate.year,minDate.month, minDate.day),\r\n              maxDate: new Date(maxDate.year,maxDate.month, maxDate.day)\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Metodo para obtener los dispositivos disponibles\r\n   */\r\n  getClases(): Observable<Clase[]>{\r\n    const email = this.cookieService.get('email');\r\n    return this.httpClient.get<Clase[]>(this.apiSQL + 'api/clases');\r\n  }\r\n\r\n  /**\r\n   * Metodo para obtener los dispositivos disponibles\r\n   */\r\n  getClasesCliente(): Observable<Clase[]>{\r\n    const cedula = this.cookieService.get('cedula');\r\n    return this.httpClient.get<Clase[]>(this.apiSQL + 'api/clientes/'+cedula+'/clases');\r\n  }\r\n\r\n  /**\r\n   * Metodo para obtener los tipos de clases\r\n   */\r\n  getTipos(): Observable<Tipo[]>{\r\n    return this.httpClient.get<Tipo[]>(this.apiSQL + 'api/TIPOS_CLASE');\r\n  }\r\n  /**\r\n   * Metodo para obtener las sucursales\r\n   */\r\n  getSucursales(): Observable<Sucursal[]>{\r\n    return this.httpClient.get<Sucursal[]>(this.apiSQL + 'api/sucursal');\r\n  }\r\n\r\n  postRegistro(claseIdentificador: number): Observable<any>{\r\n    const cedula = this.cookieService.get('cedula');\r\n    return this.httpClient.post<any>(this.apiSQL + 'api/clientes/'+cedula+'/clase/'+claseIdentificador,null);\r\n  }\r\n}\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}